[
  {
    "id": 1,
    "question": "What is the main difference between \"let\", \"const\" and \"var\" in JavaScript?",
    "answer": "var: function-scoped, can be redeclared\nlet: block-scoped, cannot be redeclared\nconst: block-scoped, cannot be redeclared or reassigned"
  },
  {
    "id": 2,
    "question": "Explain the difference between == and === in JavaScript.",
    "answer": "== compares value only (type coercion), === compares value and type"
  },
  {
    "id": 3,
    "question": "What is a closure in JavaScript?",
    "answer": "A function that remembers its lexical scope even when executed outside"
  },
  {
    "id": 4,
    "question": "What does the 'this' keyword refer to in JavaScript?",
    "answer": "Depends on how the function is called; in classes, it refers to the instance"
  },
  {
    "id": 5,
    "question": "Explain event delegation in JavaScript.",
    "answer": "Attaching a single event listener to a parent element to handle events for its children"
  },
  {
    "id": 6,
    "question": "What is the difference between null and undefined in JavaScript?",
    "answer": "null: intentional absence, undefined: variable declared but not assigned"
  },
  {
    "id": 7,
    "question": "What are Promises in JavaScript?",
    "answer": "Objects representing the eventual completion or failure of an asynchronous operation"
  },
  {
    "id": 8,
    "question": "Difference between async/await and Promises?",
    "answer": "async/await is syntactic sugar for Promises, makes async code look synchronous"
  },
  {
    "id": 9,
    "question": "What is the difference between call, apply, and bind in JavaScript?",
    "answer": "call/apply: invoke function with specified this; bind: returns new function with this bound"
  },
  {
    "id": 10,
    "question": "What is hoisting in JavaScript?",
    "answer": "Variables and function declarations are moved to the top of their scope before execution"
  },
  {
    "id": 11,
    "question": "What is the difference between shallow copy and deep copy?",
    "answer": "Shallow copy copies references, deep copy copies values recursively"
  },
  {
    "id": 12,
    "question": "Explain the difference between map, filter, and reduce in JavaScript.",
    "answer": "map: transforms array\nfilter: filters array\nreduce: reduces array to a single value"
  },
  {
    "id": 13,
    "question": "What is the difference between synchronous and asynchronous code?",
    "answer": "Synchronous: blocking, runs sequentially\nAsynchronous: non-blocking, can run concurrently"
  },
  {
    "id": 14,
    "question": "What is the difference between call stack and event loop?",
    "answer": "Call stack: executes functions synchronously\nEvent loop: manages async callbacks and tasks"
  },
  {
    "id": 15,
    "question": "What is the difference between localStorage, sessionStorage, and cookies?",
    "answer": "localStorage: persists indefinitely\nsessionStorage: persists until tab closed\ncookies: sent to server, has size limit"
  },
  {
    "id": 16,
    "question": "What is a service worker in web development?",
    "answer": "Script that runs in background, enables offline caching and push notifications"
  },
  {
    "id": 17,
    "question": "Explain the difference between REST and GraphQL.",
    "answer": "REST: multiple endpoints, fixed responses\nGraphQL: single endpoint, client-defined response"
  },
  {
    "id": 18,
    "question": "What is the difference between let and const in terms of hoisting?",
    "answer": "Both are hoisted but in temporal dead zone; cannot access before declaration"
  },
  {
    "id": 19,
    "question": "Explain the difference between == null and === null in JavaScript.",
    "answer": "== null matches null or undefined\n=== null matches only null"
  },
  {
    "id": 20,
    "question": "What is the difference between function declaration and function expression?",
    "answer": "Declaration: hoisted, named\nExpression: can be anonymous, not hoisted"
  },
  {
    "id": 21,
    "question": "Explain the difference between PUT and PATCH in REST APIs.",
    "answer": "PUT: full update\nPATCH: partial update"
  },
  {
    "id": 22,
    "question": "What is the difference between TCP and UDP?",
    "answer": "TCP: connection-oriented, reliable\nUDP: connectionless, faster, unreliable"
  },
  {
    "id": 23,
    "question": "Explain the difference between SQL INNER JOIN and LEFT JOIN.",
    "answer": "INNER JOIN: only matching rows\nLEFT JOIN: all rows from left table, matching from right"
  },
  {
    "id": 24,
    "question": "What is the difference between null, undefined, and NaN in JavaScript?",
    "answer": "null: intentional absence, undefined: uninitialized, NaN: not a number"
  },
  {
    "id": 25,
    "question": "Explain the difference between call stack overflow and memory leak.",
    "answer": "Stack overflow: too many nested calls\nMemory leak: unused memory not freed"
  },
  {
    "id": 26,
    "question": "What is the difference between GET and POST methods in HTTP?",
    "answer": "GET: retrieve data\nPOST: send/create data"
  },
  {
    "id": 27,
    "question": "What is the difference between a cookie and a JWT?",
    "answer": "Cookie: stored by browser, sent automatically\nJWT: JSON Web Token, stateless authentication"
  },
  {
    "id": 28,
    "question": "What is the difference between flex and grid in CSS?",
    "answer": "Flex: 1D layout\nGrid: 2D layout"
  },
  {
    "id": 29,
    "question": "Explain the difference between prototypal inheritance and classical inheritance.",
    "answer": "Prototypal: objects inherit from objects\nClassical: classes inherit from classes"
  },
  {
    "id": 30,
    "question": "What is the difference between nullish coalescing (??) and logical OR (||) in JavaScript?",
    "answer": "?? only considers null/undefined, || considers falsy values"
  }
]
